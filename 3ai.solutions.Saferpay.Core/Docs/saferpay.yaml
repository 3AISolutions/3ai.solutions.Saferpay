---
openapi: 3.0.0
info:
  title: Saferpay JSON API
  version: 1.10.0
servers:
- url: https://www.saferpay.com/api/Payment/v1
  description: Production System
- url: https://test.saferpay.com/api/Payment/v1
  description: Test System
security:
- BasicAuth: []
paths:
  /PaymentPage/Initialize:
    post:
      tags:
      - PaymentPage
      description: This method can be used to start a transaction with the Payment Page which may involve either DCC and / or 3d-secure
      requestBody:
        $ref: '#/components/requestBodies/PaymentPageInitialize'
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentPageInitializeResponse'
        "400":
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "401":
          description: Authentication of the request failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "402":
          description: Requested action failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "403":
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "406":
          description: Not acceptable (wrong accept header)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "415":
          description: Unsupported media type (wrong content-type header)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "500":
          description: Internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
  /PaymentPage/Assert:
    post:
      tags:
      - PaymentPage
      description: "Call this function to safely check the status of the transaction from your server. Depending on the payment provider, the resulting transaction may either be an authorization or may already be captured (meaning the financial flow was already triggered). This will be visible in the status of the transaction container returned in the response."
      requestBody:
        $ref: '#/components/requestBodies/PaymentPageAssert'
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentPageAssertResponse'
        "400":
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "401":
          description: Authentication of the request failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "402":
          description: Requested action failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "403":
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "406":
          description: Not acceptable (wrong accept header)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "415":
          description: Unsupported media type (wrong content-type header)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "500":
          description: Internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
  /Transaction/Initialize:
    post:
      tags:
      - Transaction
      description: This method may be used to start a transaction which may involve either DCC and / or 3d-secure.
      requestBody:
        $ref: '#/components/requestBodies/TransactionInitialize'
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionInitializeResponse'
        "400":
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "401":
          description: Authentication of the request failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "402":
          description: Requested action failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "403":
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "406":
          description: Not acceptable (wrong accept header)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "415":
          description: Unsupported media type (wrong content-type header)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "500":
          description: Internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
  /Transaction/Authorize:
    post:
      tags:
      - Transaction
      description: This function may be called to authorize a transaction which was started by a call to Transaction/Initialize.
      requestBody:
        $ref: '#/components/requestBodies/TransactionAuthorize'
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionAuthorizeResponse'
        "400":
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "401":
          description: Authentication of the request failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "402":
          description: Requested action failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "403":
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "406":
          description: Not acceptable (wrong accept header)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "415":
          description: Unsupported media type (wrong content-type header)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "500":
          description: Internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
  /Transaction/QueryPaymentMeans:
    post:
      tags:
      - Transaction
      description: This method may be used to query the payment means and payer data (address) after initialize and wallet redirect.
      requestBody:
        $ref: '#/components/requestBodies/TransactionQueryPaymentMeans'
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionQueryPaymentMeansResponse'
        "400":
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "401":
          description: Authentication of the request failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "402":
          description: Requested action failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "403":
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "406":
          description: Not acceptable (wrong accept header)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "415":
          description: Unsupported media type (wrong content-type header)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "500":
          description: Internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
  /Transaction/AdjustAmount:
    post:
      tags:
      - Transaction
      description: This method may be used to adjust the amount after query payment means.
      requestBody:
        $ref: '#/components/requestBodies/TransactionAdjustAmount'
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionAdjustAmountResponse'
        "400":
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "401":
          description: Authentication of the request failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "402":
          description: Requested action failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "403":
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "406":
          description: Not acceptable (wrong accept header)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "415":
          description: Unsupported media type (wrong content-type header)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "500":
          description: Internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
  /Transaction/AuthorizeDirect:
    post:
      tags:
      - Transaction
      description: This function may be used to directly authorize transactions which do not require a redirect of the customer (e.g. direct debit or recurring transactions based on a previously registered alias).
      requestBody:
        $ref: '#/components/requestBodies/TransactionAuthorizeDirect'
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionAuthorizeDirectResponse'
        "400":
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "401":
          description: Authentication of the request failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "402":
          description: Requested action failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "403":
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "406":
          description: Not acceptable (wrong accept header)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "415":
          description: Unsupported media type (wrong content-type header)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "500":
          description: Internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
  /Transaction/AuthorizeReferenced:
    post:
      tags:
      - Transaction
      description: "This method may be used to perform follow-up authorizations to an earlier transaction. At this time, the referenced (initial) transaction must have been performed setting either the recurring or installment option."
      requestBody:
        $ref: '#/components/requestBodies/TransactionAuthorizeReferenced'
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionAuthorizeReferencedResponse'
        "400":
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "401":
          description: Authentication of the request failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "402":
          description: Requested action failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "403":
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "406":
          description: Not acceptable (wrong accept header)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "415":
          description: Unsupported media type (wrong content-type header)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "500":
          description: Internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
  /Transaction/Capture:
    post:
      tags:
      - Transaction
      description: This method may be used to finalize previously authorized transactions and refunds.
      requestBody:
        $ref: '#/components/requestBodies/TransactionCapture'
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionCaptureResponse'
        "400":
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "401":
          description: Authentication of the request failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "402":
          description: Requested action failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "403":
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "406":
          description: Not acceptable (wrong accept header)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "415":
          description: Unsupported media type (wrong content-type header)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "500":
          description: Internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
  /Transaction/MultipartCapture:
    post:
      tags:
      - Transaction
      description: This method may be used to capture multiple parts of an authorized transaction.
      requestBody:
        $ref: '#/components/requestBodies/TransactionMultipartCapture'
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionMultipartCaptureResponse'
        "400":
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "401":
          description: Authentication of the request failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "402":
          description: Requested action failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "403":
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "406":
          description: Not acceptable (wrong accept header)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "415":
          description: Unsupported media type (wrong content-type header)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "500":
          description: Internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
  /Transaction/AssertCapture:
    post:
      tags:
      - Transaction
      description: This method is only supported for pending capture transactions (only used for paydirekt at the moment)
      requestBody:
        $ref: '#/components/requestBodies/TransactionAssertCapture'
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionAssertCaptureResponse'
        "400":
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "401":
          description: Authentication of the request failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "402":
          description: Requested action failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "403":
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "406":
          description: Not acceptable (wrong accept header)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "415":
          description: Unsupported media type (wrong content-type header)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "500":
          description: Internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
  /Transaction/MultipartFinalize:
    post:
      tags:
      - Transaction
      description: This method may be used to finalize an authorized transaction (i.e. marks the end of partial captures).
      requestBody:
        $ref: '#/components/requestBodies/TransactionMultipartFinalize'
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionMultipartFinalizeResponse'
        "400":
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "401":
          description: Authentication of the request failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "402":
          description: Requested action failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "403":
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "406":
          description: Not acceptable (wrong accept header)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "415":
          description: Unsupported media type (wrong content-type header)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "500":
          description: Internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
  /Transaction/Refund:
    post:
      tags:
      - Transaction
      description: This method may be called to refund a previous transaction.
      requestBody:
        $ref: '#/components/requestBodies/TransactionRefund'
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionRefundResponse'
        "400":
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "401":
          description: Authentication of the request failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "402":
          description: Requested action failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "403":
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "406":
          description: Not acceptable (wrong accept header)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "415":
          description: Unsupported media type (wrong content-type header)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "500":
          description: Internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
  /Transaction/AssertRefund:
    post:
      tags:
      - Transaction
      description: This method may be used to inquire the status and further information of pending refunds.
      requestBody:
        $ref: '#/components/requestBodies/TransactionAssertRefund'
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionAssertRefundResponse'
        "400":
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "401":
          description: Authentication of the request failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "402":
          description: Requested action failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "403":
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "406":
          description: Not acceptable (wrong accept header)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "415":
          description: Unsupported media type (wrong content-type header)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "500":
          description: Internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
  /Transaction/RefundDirect:
    post:
      tags:
      - Transaction
      description: This method may be called to refund an amount to the given means of payment (not supported for all means of payment) without referencing a previous transaction. This might be the case if the original transaction was done with a card which is not valid any more.
      requestBody:
        $ref: '#/components/requestBodies/TransactionRefundDirect'
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionRefundDirectResponse'
        "400":
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "401":
          description: Authentication of the request failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "402":
          description: Requested action failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "403":
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "406":
          description: Not acceptable (wrong accept header)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "415":
          description: Unsupported media type (wrong content-type header)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "500":
          description: Internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
  /Transaction/Cancel:
    post:
      tags:
      - Transaction
      description: This method may be used to cancel previously authorized transactions and refunds.
      requestBody:
        $ref: '#/components/requestBodies/TransactionCancel'
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionCancelResponse'
        "400":
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "401":
          description: Authentication of the request failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "402":
          description: Requested action failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "403":
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "406":
          description: Not acceptable (wrong accept header)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "415":
          description: Unsupported media type (wrong content-type header)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "500":
          description: Internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
  /Transaction/RedirectPayment:
    post:
      tags:
      - Transaction
      description: "WARNING: This feature is deprecated and replaced by the Payment Page. Please use the parameter PaymentMethods to directly select the desired 3rd party provider!"
      requestBody:
        $ref: '#/components/requestBodies/TransactionRedirectPayment'
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionRedirectPaymentResponse'
        "400":
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "401":
          description: Authentication of the request failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "402":
          description: Requested action failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "403":
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "406":
          description: Not acceptable (wrong accept header)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "415":
          description: Unsupported media type (wrong content-type header)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "500":
          description: Internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
  /Transaction/AssertRedirectPayment:
    post:
      tags:
      - Transaction
      description: "WARNING: This feature is deprecated and replaced by the Payment Page. Please use the parameter PaymentMethods to directly select the desired 3rd party provider!"
      requestBody:
        $ref: '#/components/requestBodies/TransactionAssertRedirectPayment'
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionAssertRedirectPaymentResponse'
        "400":
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "401":
          description: Authentication of the request failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "402":
          description: Requested action failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "403":
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "406":
          description: Not acceptable (wrong accept header)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "415":
          description: Unsupported media type (wrong content-type header)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "500":
          description: Internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
  /Alias/Insert:
    post:
      tags:
      - Alias
      description: This function may be used to insert an alias without knowledge about the card details. Therefore a redirect of the customer is required.
      requestBody:
        $ref: '#/components/requestBodies/AliasInsert'
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AliasInsertResponse'
        "400":
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "401":
          description: Authentication of the request failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "402":
          description: Requested action failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "403":
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "406":
          description: Not acceptable (wrong accept header)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "415":
          description: Unsupported media type (wrong content-type header)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "500":
          description: Internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
  /Alias/AssertInsert:
    post:
      tags:
      - Alias
      description: This method may be used to inquire the Alias Id and further information after a successful Alias Insert call.
      requestBody:
        $ref: '#/components/requestBodies/AliasAssertInsert'
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AliasAssertInsertResponse'
        "400":
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "401":
          description: Authentication of the request failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "402":
          description: Requested action failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "403":
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "406":
          description: Not acceptable (wrong accept header)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "415":
          description: Unsupported media type (wrong content-type header)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "500":
          description: Internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
  /Alias/InsertDirect:
    post:
      tags:
      - Alias
      description: This method may be used to insert an alias directly with card-data collected by using your own HTML form.
      requestBody:
        $ref: '#/components/requestBodies/AliasInsertDirect'
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AliasInsertDirectResponse'
        "400":
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "401":
          description: Authentication of the request failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "402":
          description: Requested action failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "403":
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "406":
          description: Not acceptable (wrong accept header)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "415":
          description: Unsupported media type (wrong content-type header)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "500":
          description: Internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
  /Alias/Delete:
    post:
      tags:
      - Alias
      description: This method may be used to delete previously inserted aliases.
      requestBody:
        $ref: '#/components/requestBodies/AliasDelete'
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AliasDeleteResponse'
        "400":
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "401":
          description: Authentication of the request failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "402":
          description: Requested action failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "403":
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "406":
          description: Not acceptable (wrong accept header)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "415":
          description: Unsupported media type (wrong content-type header)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "500":
          description: Internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
  /Batch/Close:
    post:
      tags:
      - Batch
      description: This chapter covers the Batch Close via API
      requestBody:
        $ref: '#/components/requestBodies/BatchClose'
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchCloseResponse'
        "400":
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "401":
          description: Authentication of the request failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "402":
          description: Requested action failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "403":
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "406":
          description: Not acceptable (wrong accept header)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "415":
          description: Unsupported media type (wrong content-type header)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "500":
          description: Internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
  /OmniChannel/InsertAlias:
    post:
      tags:
      - OmniChannel
      description: This function may be used to create an alias by providing a SixTransactionReference.
      requestBody:
        $ref: '#/components/requestBodies/OmniChannelInsertAlias'
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OmniChannelInsertAliasResponse'
        "400":
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "401":
          description: Authentication of the request failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "402":
          description: Requested action failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "403":
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "406":
          description: Not acceptable (wrong accept header)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "415":
          description: Unsupported media type (wrong content-type header)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "500":
          description: Internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
  /OmniChannel/AcquireTransaction:
    post:
      tags:
      - OmniChannel
      description: This function may be used to acquire an authorized transaction by providing a SixTransactionReference. This transaction can then be captured or canceled.
      requestBody:
        $ref: '#/components/requestBodies/OmniChannelAcquireTransaction'
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OmniChannelAcquireTransactionResponse'
        "400":
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "401":
          description: Authentication of the request failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "402":
          description: Requested action failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "403":
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "406":
          description: Not acceptable (wrong accept header)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "415":
          description: Unsupported media type (wrong content-type header)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
        "500":
          description: Internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                type: string
components:
  schemas:
    RequestHeader:
      title: RequestHeader
      required:
      - CustomerId
      - RequestId
      - RetryIndicator
      - SpecVersion
      type: object
      properties:
        SpecVersion:
          type: string
        CustomerId:
          type: string
        RequestId:
          type: string
        RetryIndicator:
          type: integer
        ClientInfo:
          $ref: '#/components/schemas/ClientInfo'
    ResponseHeader:
      title: ResponseHeader
      required:
      - RequestId
      - SpecVersion
      type: object
      properties:
        RequestId:
          type: string
        SpecVersion:
          type: string
    BankAccountInfo:
      title: BankAccountInfo
      required:
      - IBAN
      type: object
      properties:
        IBAN:
          type: string
        HolderName:
          type: string
        BIC:
          type: string
        BankName:
          type: string
        CountryCode:
          type: string
    CaptureReference:
      title: CaptureReference
      type: object
      properties:
        CaptureId:
          type: string
        TransactionId:
          type: string
        OrderId:
          type: string
        OrderPartId:
          type: string
    Address:
      title: Address
      type: object
      properties:
        FirstName:
          type: string
        LastName:
          type: string
        DateOfBirth:
          type: string
        Company:
          type: string
        Gender:
          type: string
        LegalForm:
          type: string
        Street:
          type: string
        Street2:
          type: string
        Zip:
          type: string
        City:
          type: string
        CountrySubdivisionCode:
          type: string
        CountryCode:
          type: string
        Phone:
          type: string
        Email:
          type: string
    AddressForm:
      title: AddressForm
      required:
      - Display
      type: object
      properties:
        Display:
          type: boolean
        MandatoryFields:
          type: array
          items:
            type: string
    Alias:
      title: Alias
      required:
      - Id
      type: object
      properties:
        Id:
          type: string
        VerificationCode:
          type: string
    AliasInfo:
      title: AliasInfo
      required:
      - Id
      - Lifetime
      type: object
      properties:
        Id:
          type: string
        Lifetime:
          type: integer
    AliasInsertCheck:
      title: AliasInsertCheck
      required:
      - TerminalId
      - Type
      type: object
      properties:
        Type:
          type: string
        TerminalId:
          type: string
    AliasInsertCheckResult:
      title: AliasInsertCheckResult
      required:
      - Message
      - Result
      type: object
      properties:
        Result:
          type: string
        Message:
          type: string
    Amount:
      title: Amount
      required:
      - CurrencyCode
      - Value
      type: object
      properties:
        Value:
          type: string
        CurrencyCode:
          type: string
    BankAccount:
      title: BankAccount
      required:
      - IBAN
      type: object
      properties:
        IBAN:
          type: string
        HolderName:
          type: string
        BIC:
          type: string
        BankName:
          type: string
    BasicPayment:
      title: BasicPayment
      required:
      - Amount
      type: object
      properties:
        Amount:
          $ref: '#/components/schemas/Amount'
        OrderId:
          type: string
        Description:
          type: string
        PayerNote:
          type: string
    BillpayCapture:
      title: BillpayCapture
      type: object
      properties:
        DelayInDays:
          type: integer
    Brand:
      title: Brand
      required:
      - Name
      type: object
      properties:
        PaymentMethod:
          type: string
        Name:
          type: string
    Card:
      title: Card
      required:
      - ExpMonth
      - ExpYear
      - Number
      type: object
      properties:
        Number:
          type: string
        ExpYear:
          type: integer
        ExpMonth:
          type: integer
        HolderName:
          type: string
        VerificationCode:
          type: string
    CardForm:
      title: CardForm
      type: object
      properties:
        HolderName:
          type: string
    CardInfo:
      title: CardInfo
      required:
      - ExpMonth
      - ExpYear
      - MaskedNumber
      type: object
      properties:
        MaskedNumber:
          type: string
        ExpYear:
          type: integer
        ExpMonth:
          type: integer
        HolderName:
          type: string
        CountryCode:
          type: string
        HashValue:
          type: string
    ClientInfo:
      title: ClientInfo
      type: object
      properties:
        ShopInfo:
          type: string
        OsInfo:
          type: string
    DccInfo:
      title: DccInfo
      required:
      - PayerAmount
      type: object
      properties:
        PayerAmount:
          $ref: '#/components/schemas/Amount'
    DirectDebitInfo:
      title: DirectDebitInfo
      required:
      - CreditorId
      - MandateId
      type: object
      properties:
        MandateId:
          type: string
        CreditorId:
          type: string
    FraudFreeInfo:
      title: FraudFreeInfo
      required:
      - Id
      - LiabilityShift
      - Score
      type: object
      properties:
        Id:
          type: string
        LiabilityShift:
          type: boolean
        Score:
          type: number
          format: double
        Investigationpoints:
          type: array
          items:
            type: string
        ErrorMessage:
          type: string
    InstallmentOptions:
      title: InstallmentOptions
      required:
      - Initial
      type: object
      properties:
        Initial:
          type: boolean
    InvoiceInfo:
      title: InvoiceInfo
      type: object
      properties:
        Payee:
          $ref: '#/components/schemas/BankAccount'
        ReasonForTransfer:
          type: string
        DueDate:
          type: string
          format: date
    LiabilityInfo:
      title: LiabilityInfo
      required:
      - LiabilityShift
      - LiableEntity
      type: object
      properties:
        LiabilityShift:
          type: boolean
        LiableEntity:
          type: string
        ThreeDs:
          $ref: '#/components/schemas/ThreeDsInfo'
        FraudFree:
          $ref: '#/components/schemas/FraudFreeInfo'
    MarketplaceCapture:
      title: MarketplaceCapture
      required:
      - SubmerchantId
      type: object
      properties:
        SubmerchantId:
          type: string
        Fee:
          $ref: '#/components/schemas/Amount'
        FeeRefund:
          $ref: '#/components/schemas/Amount'
    Notification:
      title: Notification
      type: object
      properties:
        MerchantEmail:
          type: string
        PayerEmail:
          type: string
        NotifyUrl:
          type: string
    Payer:
      title: Payer
      type: object
      properties:
        IpAddress:
          type: string
        LanguageCode:
          type: string
        DeliveryAddress:
          $ref: '#/components/schemas/Address'
        BillingAddress:
          $ref: '#/components/schemas/Address'
    PayerInfo:
      title: PayerInfo
      type: object
      properties:
        IpAddress:
          type: string
        IpLocation:
          type: string
        DeliveryAddress:
          $ref: '#/components/schemas/Address'
        BillingAddress:
          $ref: '#/components/schemas/Address'
    Payment:
      title: Payment
      required:
      - Amount
      type: object
      properties:
        Amount:
          $ref: '#/components/schemas/Amount'
        OrderId:
          type: string
        Description:
          type: string
        PayerNote:
          type: string
        MandateId:
          type: string
        Options:
          $ref: '#/components/schemas/PaymentOptions'
        Recurring:
          $ref: '#/components/schemas/RecurringOptions'
        Installment:
          $ref: '#/components/schemas/InstallmentOptions'
    PaymentMeans:
      title: PaymentMeans
      type: object
      properties:
        Card:
          $ref: '#/components/schemas/Card'
        BankAccount:
          $ref: '#/components/schemas/BankAccount'
        Alias:
          $ref: '#/components/schemas/Alias'
    PaymentMeansInfo:
      title: PaymentMeansInfo
      required:
      - Brand
      - DisplayText
      type: object
      properties:
        Brand:
          $ref: '#/components/schemas/Brand'
        DisplayText:
          type: string
        Wallet:
          type: string
        Card:
          $ref: '#/components/schemas/CardInfo'
        BankAccount:
          $ref: '#/components/schemas/BankAccountInfo'
    PaymentOptions:
      title: PaymentOptions
      type: object
      properties:
        PreAuth:
          type: boolean
    PaymentPagePayment:
      title: PaymentPagePayment
      required:
      - Amount
      - Description
      type: object
      properties:
        Amount:
          $ref: '#/components/schemas/Amount'
        OrderId:
          type: string
        Description:
          type: string
        PayerNote:
          type: string
        MandateId:
          type: string
        Options:
          $ref: '#/components/schemas/PaymentOptions'
        Recurring:
          $ref: '#/components/schemas/RecurringOptions'
        Installment:
          $ref: '#/components/schemas/InstallmentOptions'
    PaymentTransaction:
      title: PaymentTransaction
      required:
      - Amount
      - Date
      - Id
      - SixTransactionReference
      - Status
      - Type
      type: object
      properties:
        Type:
          type: string
        Status:
          type: string
        Id:
          type: string
        Date:
          type: string
          format: date
        Amount:
          $ref: '#/components/schemas/Amount'
        OrderId:
          type: string
        AcquirerName:
          type: string
        AcquirerReference:
          type: string
        SixTransactionReference:
          type: string
        ApprovalCode:
          type: string
        DirectDebit:
          $ref: '#/components/schemas/DirectDebitInfo'
        Invoice:
          $ref: '#/components/schemas/InvoiceInfo'
    PendingNotification:
      title: PendingNotification
      type: object
      properties:
        MerchantEmail:
          type: string
        NotifyUrl:
          type: string
    RecurringOptions:
      title: RecurringOptions
      required:
      - Initial
      type: object
      properties:
        Initial:
          type: boolean
    Redirect:
      title: Redirect
      required:
      - PaymentMeansRequired
      - RedirectUrl
      type: object
      properties:
        RedirectUrl:
          type: string
        PaymentMeansRequired:
          type: boolean
    Refund:
      title: Refund
      required:
      - Amount
      type: object
      properties:
        Amount:
          $ref: '#/components/schemas/Amount'
        OrderId:
          type: string
        Description:
          type: string
    RefundTransaction:
      title: RefundTransaction
      required:
      - Amount
      - Date
      - Id
      - SixTransactionReference
      - Status
      - Type
      type: object
      properties:
        Type:
          type: string
        Status:
          type: string
        Id:
          type: string
        Date:
          type: string
          format: date
        Amount:
          $ref: '#/components/schemas/Amount'
        OrderId:
          type: string
        AcquirerName:
          type: string
        AcquirerReference:
          type: string
        SixTransactionReference:
          type: string
        ApprovalCode:
          type: string
        DirectDebit:
          $ref: '#/components/schemas/DirectDebitInfo'
        Invoice:
          $ref: '#/components/schemas/InvoiceInfo'
    RegisterAlias:
      title: RegisterAlias
      required:
      - IdGenerator
      type: object
      properties:
        IdGenerator:
          type: string
        Id:
          type: string
        Lifetime:
          type: integer
    RegistrationErrorInfo:
      title: RegistrationErrorInfo
      type: object
      properties:
        ErrorName:
          type: string
        ErrorMessage:
          type: string
    RegistrationResult:
      title: RegistrationResult
      required:
      - Success
      type: object
      properties:
        Success:
          type: boolean
        Alias:
          $ref: '#/components/schemas/AliasInfo'
        Error:
          $ref: '#/components/schemas/RegistrationErrorInfo'
    ReturnUrls:
      title: ReturnUrls
      required:
      - Fail
      - Success
      type: object
      properties:
        Success:
          type: string
        Fail:
          type: string
        Abort:
          type: string
    Styling:
      title: Styling
      type: object
      properties:
        CssUrl:
          type: string
        ContentSecurityEnabled:
          type: boolean
        Theme:
          type: string
    ThreeDsInfo:
      title: ThreeDsInfo
      required:
      - Authenticated
      - LiabilityShift
      - Xid
      type: object
      properties:
        Authenticated:
          type: boolean
        LiabilityShift:
          type: boolean
        Xid:
          type: string
        VerificationValue:
          type: string
    TransactionReference:
      title: TransactionReference
      type: object
      properties:
        TransactionId:
          type: string
        OrderId:
          type: string
    Wallet:
      title: Wallet
      required:
      - Type
      type: object
      properties:
        Type:
          type: string
        PaymentMethods:
          type: array
          items:
            type: string
        RequestDeliveryAddress:
          type: boolean
        EnableAmountAdjustment:
          type: boolean
    ErrorResponse:
      title: ErrorResponse
      required:
      - Behavior
      - ErrorMessage
      - ErrorName
      - ResponseHeader
      type: object
      properties:
        ResponseHeader:
          $ref: '#/components/schemas/ResponseHeader'
        Behavior:
          type: string
        ErrorName:
          type: string
        ErrorMessage:
          type: string
        TransactionId:
          type: string
        ErrorDetail:
          type: array
          items:
            type: string
        ProcessorName:
          type: string
        ProcessorResult:
          type: string
        ProcessorMessage:
          type: string
    PaymentPageInitializeRequest:
      title: PaymentPageInitializeRequest
      required:
      - Payment
      - RequestHeader
      - ReturnUrls
      - TerminalId
      type: object
      properties:
        RequestHeader:
          $ref: '#/components/schemas/RequestHeader'
        ConfigSet:
          type: string
        TerminalId:
          type: string
        Payment:
          $ref: '#/components/schemas/PaymentPagePayment'
        PaymentMethods:
          type: array
          items:
            type: string
        Wallets:
          type: array
          items:
            type: string
        Payer:
          $ref: '#/components/schemas/Payer'
        RegisterAlias:
          $ref: '#/components/schemas/RegisterAlias'
        ReturnUrls:
          $ref: '#/components/schemas/ReturnUrls'
        Notification:
          $ref: '#/components/schemas/Notification'
        Styling:
          $ref: '#/components/schemas/Styling'
        BillingAddressForm:
          $ref: '#/components/schemas/AddressForm'
        DeliveryAddressForm:
          $ref: '#/components/schemas/AddressForm'
        CardForm:
          $ref: '#/components/schemas/CardForm'
    PaymentPageInitializeResponse:
      title: PaymentPageInitializeResponse
      required:
      - Expiration
      - RedirectUrl
      - ResponseHeader
      - Token
      type: object
      properties:
        ResponseHeader:
          $ref: '#/components/schemas/ResponseHeader'
        Token:
          type: string
        Expiration:
          type: string
          format: date
        RedirectUrl:
          type: string
    PaymentPageAssertRequest:
      title: PaymentPageAssertRequest
      required:
      - RequestHeader
      - Token
      type: object
      properties:
        RequestHeader:
          $ref: '#/components/schemas/RequestHeader'
        Token:
          type: string
    PaymentPageAssertResponse:
      title: PaymentPageAssertResponse
      required:
      - PaymentMeans
      - ResponseHeader
      - Transaction
      type: object
      properties:
        ResponseHeader:
          $ref: '#/components/schemas/ResponseHeader'
        Transaction:
          $ref: '#/components/schemas/PaymentTransaction'
        PaymentMeans:
          $ref: '#/components/schemas/PaymentMeansInfo'
        Payer:
          $ref: '#/components/schemas/PayerInfo'
        RegistrationResult:
          $ref: '#/components/schemas/RegistrationResult'
        Liability:
          $ref: '#/components/schemas/LiabilityInfo'
        Dcc:
          $ref: '#/components/schemas/DccInfo'
    TransactionInitializeRequest:
      title: TransactionInitializeRequest
      required:
      - Payment
      - RequestHeader
      - ReturnUrls
      - TerminalId
      type: object
      properties:
        RequestHeader:
          $ref: '#/components/schemas/RequestHeader'
        ConfigSet:
          type: string
        TerminalId:
          type: string
        Payment:
          $ref: '#/components/schemas/Payment'
        PaymentMeans:
          $ref: '#/components/schemas/PaymentMeans'
        Payer:
          $ref: '#/components/schemas/Payer'
        ReturnUrls:
          $ref: '#/components/schemas/ReturnUrls'
        Styling:
          $ref: '#/components/schemas/Styling'
        Wallet:
          $ref: '#/components/schemas/Wallet'
        PaymentMethods:
          type: array
          items:
            type: string
        CardForm:
          $ref: '#/components/schemas/CardForm'
    TransactionInitializeResponse:
      title: TransactionInitializeResponse
      required:
      - Expiration
      - RedirectRequired
      - ResponseHeader
      - Token
      type: object
      properties:
        ResponseHeader:
          $ref: '#/components/schemas/ResponseHeader'
        Token:
          type: string
        Expiration:
          type: string
          format: date
        LiabilityShift:
          type: boolean
        RedirectRequired:
          type: boolean
        Redirect:
          $ref: '#/components/schemas/Redirect'
    TransactionAuthorizeRequest:
      title: TransactionAuthorizeRequest
      required:
      - RequestHeader
      - Token
      type: object
      properties:
        RequestHeader:
          $ref: '#/components/schemas/RequestHeader'
        Token:
          type: string
        Condition:
          type: string
        VerificationCode:
          type: string
        RegisterAlias:
          $ref: '#/components/schemas/RegisterAlias'
    TransactionAuthorizeResponse:
      title: TransactionAuthorizeResponse
      required:
      - PaymentMeans
      - ResponseHeader
      - Transaction
      type: object
      properties:
        ResponseHeader:
          $ref: '#/components/schemas/ResponseHeader'
        Transaction:
          $ref: '#/components/schemas/PaymentTransaction'
        PaymentMeans:
          $ref: '#/components/schemas/PaymentMeansInfo'
        Payer:
          $ref: '#/components/schemas/PayerInfo'
        RegistrationResult:
          $ref: '#/components/schemas/RegistrationResult'
        Liability:
          $ref: '#/components/schemas/LiabilityInfo'
        Dcc:
          $ref: '#/components/schemas/DccInfo'
    TransactionQueryPaymentMeansRequest:
      title: TransactionQueryPaymentMeansRequest
      required:
      - RequestHeader
      - Token
      type: object
      properties:
        RequestHeader:
          $ref: '#/components/schemas/RequestHeader'
        Token:
          type: string
        ReturnUrls:
          $ref: '#/components/schemas/ReturnUrls'
    TransactionQueryPaymentMeansResponse:
      title: TransactionQueryPaymentMeansResponse
      required:
      - PaymentMeans
      - RedirectRequired
      - ResponseHeader
      type: object
      properties:
        ResponseHeader:
          $ref: '#/components/schemas/ResponseHeader'
        PaymentMeans:
          $ref: '#/components/schemas/PaymentMeansInfo'
        Payer:
          $ref: '#/components/schemas/PayerInfo'
        RedirectRequired:
          type: boolean
        RedirectUrl:
          type: string
    TransactionAdjustAmountRequest:
      title: TransactionAdjustAmountRequest
      required:
      - Amount
      - RequestHeader
      - Token
      type: object
      properties:
        RequestHeader:
          $ref: '#/components/schemas/RequestHeader'
        Token:
          type: string
        Amount:
          $ref: '#/components/schemas/Amount'
    TransactionAdjustAmountResponse:
      title: TransactionAdjustAmountResponse
      required:
      - ResponseHeader
      type: object
      properties:
        ResponseHeader:
          $ref: '#/components/schemas/ResponseHeader'
    TransactionAuthorizeDirectRequest:
      title: TransactionAuthorizeDirectRequest
      required:
      - Payment
      - PaymentMeans
      - RequestHeader
      - TerminalId
      type: object
      properties:
        RequestHeader:
          $ref: '#/components/schemas/RequestHeader'
        TerminalId:
          type: string
        Payment:
          $ref: '#/components/schemas/Payment'
        PaymentMeans:
          $ref: '#/components/schemas/PaymentMeans'
        RegisterAlias:
          $ref: '#/components/schemas/RegisterAlias'
        Payer:
          $ref: '#/components/schemas/Payer'
    TransactionAuthorizeDirectResponse:
      title: TransactionAuthorizeDirectResponse
      required:
      - PaymentMeans
      - ResponseHeader
      - Transaction
      type: object
      properties:
        ResponseHeader:
          $ref: '#/components/schemas/ResponseHeader'
        Transaction:
          $ref: '#/components/schemas/PaymentTransaction'
        PaymentMeans:
          $ref: '#/components/schemas/PaymentMeansInfo'
        Payer:
          $ref: '#/components/schemas/PayerInfo'
        RegistrationResult:
          $ref: '#/components/schemas/RegistrationResult'
    TransactionAuthorizeReferencedRequest:
      title: TransactionAuthorizeReferencedRequest
      required:
      - Payment
      - RequestHeader
      - TerminalId
      - TransactionReference
      type: object
      properties:
        RequestHeader:
          $ref: '#/components/schemas/RequestHeader'
        TerminalId:
          type: string
        Payment:
          $ref: '#/components/schemas/BasicPayment'
        TransactionReference:
          $ref: '#/components/schemas/TransactionReference'
        SuppressDcc:
          type: boolean
    TransactionAuthorizeReferencedResponse:
      title: TransactionAuthorizeReferencedResponse
      required:
      - PaymentMeans
      - ResponseHeader
      - Transaction
      type: object
      properties:
        ResponseHeader:
          $ref: '#/components/schemas/ResponseHeader'
        Transaction:
          $ref: '#/components/schemas/PaymentTransaction'
        PaymentMeans:
          $ref: '#/components/schemas/PaymentMeansInfo'
        Payer:
          $ref: '#/components/schemas/PayerInfo'
        Dcc:
          $ref: '#/components/schemas/DccInfo'
    TransactionCaptureRequest:
      title: TransactionCaptureRequest
      required:
      - RequestHeader
      - TransactionReference
      type: object
      properties:
        RequestHeader:
          $ref: '#/components/schemas/RequestHeader'
        TransactionReference:
          $ref: '#/components/schemas/TransactionReference'
        Amount:
          $ref: '#/components/schemas/Amount'
        Billpay:
          $ref: '#/components/schemas/BillpayCapture'
        PendingNotification:
          $ref: '#/components/schemas/PendingNotification'
        Marketplace:
          $ref: '#/components/schemas/MarketplaceCapture'
    TransactionCaptureResponse:
      title: TransactionCaptureResponse
      required:
      - ResponseHeader
      - Status
      type: object
      properties:
        ResponseHeader:
          $ref: '#/components/schemas/ResponseHeader'
        CaptureId:
          type: string
        Status:
          type: string
        Date:
          type: string
          format: date
        Invoice:
          $ref: '#/components/schemas/InvoiceInfo'
    TransactionMultipartCaptureRequest:
      title: TransactionMultipartCaptureRequest
      required:
      - Amount
      - OrderPartId
      - RequestHeader
      - TransactionReference
      - Type
      type: object
      properties:
        RequestHeader:
          $ref: '#/components/schemas/RequestHeader'
        TransactionReference:
          $ref: '#/components/schemas/TransactionReference'
        Amount:
          $ref: '#/components/schemas/Amount'
        Type:
          type: string
        OrderPartId:
          type: string
        Marketplace:
          $ref: '#/components/schemas/MarketplaceCapture'
    TransactionMultipartCaptureResponse:
      title: TransactionMultipartCaptureResponse
      required:
      - ResponseHeader
      - Status
      type: object
      properties:
        ResponseHeader:
          $ref: '#/components/schemas/ResponseHeader'
        CaptureId:
          type: string
        Status:
          type: string
        Date:
          type: string
          format: date
    TransactionAssertCaptureRequest:
      title: TransactionAssertCaptureRequest
      required:
      - CaptureReference
      - RequestHeader
      type: object
      properties:
        RequestHeader:
          $ref: '#/components/schemas/RequestHeader'
        CaptureReference:
          $ref: '#/components/schemas/CaptureReference'
    TransactionAssertCaptureResponse:
      title: TransactionAssertCaptureResponse
      required:
      - ResponseHeader
      - Status
      - TransactionId
      type: object
      properties:
        ResponseHeader:
          $ref: '#/components/schemas/ResponseHeader'
        TransactionId:
          type: string
        OrderId:
          type: string
        Status:
          type: string
        Date:
          type: string
          format: date
    TransactionMultipartFinalizeRequest:
      title: TransactionMultipartFinalizeRequest
      required:
      - RequestHeader
      - TransactionReference
      type: object
      properties:
        RequestHeader:
          $ref: '#/components/schemas/RequestHeader'
        TransactionReference:
          $ref: '#/components/schemas/TransactionReference'
    TransactionMultipartFinalizeResponse:
      title: TransactionMultipartFinalizeResponse
      required:
      - ResponseHeader
      type: object
      properties:
        ResponseHeader:
          $ref: '#/components/schemas/ResponseHeader'
    TransactionRefundRequest:
      title: TransactionRefundRequest
      required:
      - CaptureReference
      - Refund
      - RequestHeader
      type: object
      properties:
        RequestHeader:
          $ref: '#/components/schemas/RequestHeader'
        Refund:
          $ref: '#/components/schemas/Refund'
        CaptureReference:
          $ref: '#/components/schemas/CaptureReference'
        PendingNotification:
          $ref: '#/components/schemas/PendingNotification'
    TransactionRefundResponse:
      title: TransactionRefundResponse
      required:
      - PaymentMeans
      - ResponseHeader
      - Transaction
      type: object
      properties:
        ResponseHeader:
          $ref: '#/components/schemas/ResponseHeader'
        Transaction:
          $ref: '#/components/schemas/RefundTransaction'
        PaymentMeans:
          $ref: '#/components/schemas/PaymentMeansInfo'
        Dcc:
          $ref: '#/components/schemas/DccInfo'
    TransactionAssertRefundRequest:
      title: TransactionAssertRefundRequest
      required:
      - RequestHeader
      - TransactionReference
      type: object
      properties:
        RequestHeader:
          $ref: '#/components/schemas/RequestHeader'
        TransactionReference:
          $ref: '#/components/schemas/TransactionReference'
    TransactionAssertRefundResponse:
      title: TransactionAssertRefundResponse
      required:
      - ResponseHeader
      - Status
      - TransactionId
      type: object
      properties:
        ResponseHeader:
          $ref: '#/components/schemas/ResponseHeader'
        TransactionId:
          type: string
        OrderId:
          type: string
        Status:
          type: string
        Date:
          type: string
          format: date
    TransactionRefundDirectRequest:
      title: TransactionRefundDirectRequest
      required:
      - PaymentMeans
      - Refund
      - RequestHeader
      - TerminalId
      type: object
      properties:
        RequestHeader:
          $ref: '#/components/schemas/RequestHeader'
        TerminalId:
          type: string
        Refund:
          $ref: '#/components/schemas/Refund'
        PaymentMeans:
          $ref: '#/components/schemas/PaymentMeans'
    TransactionRefundDirectResponse:
      title: TransactionRefundDirectResponse
      required:
      - PaymentMeans
      - ResponseHeader
      - Transaction
      type: object
      properties:
        ResponseHeader:
          $ref: '#/components/schemas/ResponseHeader'
        Transaction:
          $ref: '#/components/schemas/RefundTransaction'
        PaymentMeans:
          $ref: '#/components/schemas/PaymentMeansInfo'
        Dcc:
          $ref: '#/components/schemas/DccInfo'
    TransactionCancelRequest:
      title: TransactionCancelRequest
      required:
      - RequestHeader
      - TransactionReference
      type: object
      properties:
        RequestHeader:
          $ref: '#/components/schemas/RequestHeader'
        TransactionReference:
          $ref: '#/components/schemas/TransactionReference'
    TransactionCancelResponse:
      title: TransactionCancelResponse
      required:
      - Date
      - ResponseHeader
      - TransactionId
      type: object
      properties:
        ResponseHeader:
          $ref: '#/components/schemas/ResponseHeader'
        TransactionId:
          type: string
        OrderId:
          type: string
        Date:
          type: string
          format: date
    TransactionRedirectPaymentRequest:
      title: TransactionRedirectPaymentRequest
      required:
      - Payment
      - RequestHeader
      - ReturnUrls
      - ServiceProvider
      - TerminalId
      type: object
      properties:
        RequestHeader:
          $ref: '#/components/schemas/RequestHeader'
        TerminalId:
          type: string
        Payment:
          $ref: '#/components/schemas/Payment'
        ServiceProvider:
          type: string
        Payer:
          $ref: '#/components/schemas/Payer'
        ReturnUrls:
          $ref: '#/components/schemas/ReturnUrls'
        Styling:
          $ref: '#/components/schemas/Styling'
        Notification:
          $ref: '#/components/schemas/Notification'
    TransactionRedirectPaymentResponse:
      title: TransactionRedirectPaymentResponse
      required:
      - Expiration
      - ResponseHeader
      - Token
      type: object
      properties:
        ResponseHeader:
          $ref: '#/components/schemas/ResponseHeader'
        Token:
          type: string
        Expiration:
          type: string
          format: date
        RedirectUrl:
          type: string
    TransactionAssertRedirectPaymentRequest:
      title: TransactionAssertRedirectPaymentRequest
      required:
      - RequestHeader
      - Token
      type: object
      properties:
        RequestHeader:
          $ref: '#/components/schemas/RequestHeader'
        Token:
          type: string
    TransactionAssertRedirectPaymentResponse:
      title: TransactionAssertRedirectPaymentResponse
      required:
      - PaymentMeans
      - ResponseHeader
      - Transaction
      type: object
      properties:
        ResponseHeader:
          $ref: '#/components/schemas/ResponseHeader'
        Transaction:
          $ref: '#/components/schemas/PaymentTransaction'
        PaymentMeans:
          $ref: '#/components/schemas/PaymentMeansInfo'
        Payer:
          $ref: '#/components/schemas/PayerInfo'
    AliasInsertRequest:
      title: AliasInsertRequest
      required:
      - RegisterAlias
      - RequestHeader
      - ReturnUrls
      - Type
      type: object
      properties:
        RequestHeader:
          $ref: '#/components/schemas/RequestHeader'
        RegisterAlias:
          $ref: '#/components/schemas/RegisterAlias'
        Type:
          type: string
        ReturnUrls:
          $ref: '#/components/schemas/ReturnUrls'
        Styling:
          $ref: '#/components/schemas/Styling'
        LanguageCode:
          type: string
        Check:
          $ref: '#/components/schemas/AliasInsertCheck'
        PaymentMethods:
          type: array
          items:
            type: string
        CardForm:
          $ref: '#/components/schemas/CardForm'
    AliasInsertResponse:
      title: AliasInsertResponse
      required:
      - Expiration
      - RedirectUrl
      - ResponseHeader
      - Token
      type: object
      properties:
        ResponseHeader:
          $ref: '#/components/schemas/ResponseHeader'
        Token:
          type: string
        Expiration:
          type: string
          format: date
        RedirectUrl:
          type: string
    AliasAssertInsertRequest:
      title: AliasAssertInsertRequest
      required:
      - RequestHeader
      - Token
      type: object
      properties:
        RequestHeader:
          $ref: '#/components/schemas/RequestHeader'
        Token:
          type: string
    AliasAssertInsertResponse:
      title: AliasAssertInsertResponse
      required:
      - Alias
      - PaymentMeans
      - ResponseHeader
      type: object
      properties:
        ResponseHeader:
          $ref: '#/components/schemas/ResponseHeader'
        Alias:
          $ref: '#/components/schemas/AliasInfo'
        PaymentMeans:
          $ref: '#/components/schemas/PaymentMeansInfo'
        CheckResult:
          $ref: '#/components/schemas/AliasInsertCheckResult'
    AliasInsertDirectRequest:
      title: AliasInsertDirectRequest
      required:
      - PaymentMeans
      - RegisterAlias
      - RequestHeader
      type: object
      properties:
        RequestHeader:
          $ref: '#/components/schemas/RequestHeader'
        RegisterAlias:
          $ref: '#/components/schemas/RegisterAlias'
        PaymentMeans:
          $ref: '#/components/schemas/PaymentMeans'
        Check:
          $ref: '#/components/schemas/AliasInsertCheck'
    AliasInsertDirectResponse:
      title: AliasInsertDirectResponse
      required:
      - Alias
      - PaymentMeans
      - ResponseHeader
      type: object
      properties:
        ResponseHeader:
          $ref: '#/components/schemas/ResponseHeader'
        Alias:
          $ref: '#/components/schemas/AliasInfo'
        PaymentMeans:
          $ref: '#/components/schemas/PaymentMeansInfo'
        CheckResult:
          $ref: '#/components/schemas/AliasInsertCheckResult'
    AliasDeleteRequest:
      title: AliasDeleteRequest
      required:
      - AliasId
      - RequestHeader
      type: object
      properties:
        RequestHeader:
          $ref: '#/components/schemas/RequestHeader'
        AliasId:
          type: string
    AliasDeleteResponse:
      title: AliasDeleteResponse
      required:
      - ResponseHeader
      type: object
      properties:
        ResponseHeader:
          $ref: '#/components/schemas/ResponseHeader'
    BatchCloseRequest:
      title: BatchCloseRequest
      required:
      - RequestHeader
      - TerminalId
      type: object
      properties:
        RequestHeader:
          $ref: '#/components/schemas/RequestHeader'
        TerminalId:
          type: string
    BatchCloseResponse:
      title: BatchCloseResponse
      required:
      - ResponseHeader
      type: object
      properties:
        ResponseHeader:
          $ref: '#/components/schemas/ResponseHeader'
    OmniChannelInsertAliasRequest:
      title: OmniChannelInsertAliasRequest
      required:
      - RegisterAlias
      - RequestHeader
      - SixTransactionReference
      type: object
      properties:
        RequestHeader:
          $ref: '#/components/schemas/RequestHeader'
        RegisterAlias:
          $ref: '#/components/schemas/RegisterAlias'
        SixTransactionReference:
          type: string
    OmniChannelInsertAliasResponse:
      title: OmniChannelInsertAliasResponse
      required:
      - Alias
      - PaymentMeans
      - ResponseHeader
      type: object
      properties:
        ResponseHeader:
          $ref: '#/components/schemas/ResponseHeader'
        Alias:
          $ref: '#/components/schemas/AliasInfo'
        PaymentMeans:
          $ref: '#/components/schemas/PaymentMeansInfo'
        CheckResult:
          $ref: '#/components/schemas/AliasInsertCheckResult'
    OmniChannelAcquireTransactionRequest:
      title: OmniChannelAcquireTransactionRequest
      required:
      - RequestHeader
      - SixTransactionReference
      - TerminalId
      type: object
      properties:
        RequestHeader:
          $ref: '#/components/schemas/RequestHeader'
        TerminalId:
          type: string
        OrderId:
          type: string
        SixTransactionReference:
          type: string
    OmniChannelAcquireTransactionResponse:
      title: OmniChannelAcquireTransactionResponse
      required:
      - PaymentMeans
      - ResponseHeader
      - Transaction
      type: object
      properties:
        ResponseHeader:
          $ref: '#/components/schemas/ResponseHeader'
        Transaction:
          $ref: '#/components/schemas/PaymentTransaction'
        PaymentMeans:
          $ref: '#/components/schemas/PaymentMeansInfo'
  responses:
    PaymentPageInitialize:
      description: ""
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PaymentPageInitializeResponse'
    PaymentPageAssert:
      description: ""
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PaymentPageAssertResponse'
    TransactionInitialize:
      description: ""
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TransactionInitializeResponse'
    TransactionAuthorize:
      description: ""
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TransactionAuthorizeResponse'
    TransactionQueryPaymentMeans:
      description: ""
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TransactionQueryPaymentMeansResponse'
    TransactionAdjustAmount:
      description: ""
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TransactionAdjustAmountResponse'
    TransactionAuthorizeDirect:
      description: ""
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TransactionAuthorizeDirectResponse'
    TransactionAuthorizeReferenced:
      description: ""
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TransactionAuthorizeReferencedResponse'
    TransactionCapture:
      description: ""
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TransactionCaptureResponse'
    TransactionMultipartCapture:
      description: ""
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TransactionMultipartCaptureResponse'
    TransactionAssertCapture:
      description: ""
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TransactionAssertCaptureResponse'
    TransactionMultipartFinalize:
      description: ""
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TransactionMultipartFinalizeResponse'
    TransactionRefund:
      description: ""
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TransactionRefundResponse'
    TransactionAssertRefund:
      description: ""
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TransactionAssertRefundResponse'
    TransactionRefundDirect:
      description: ""
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TransactionRefundDirectResponse'
    TransactionCancel:
      description: ""
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TransactionCancelResponse'
    TransactionRedirectPayment:
      description: ""
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TransactionRedirectPaymentResponse'
    TransactionAssertRedirectPayment:
      description: ""
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TransactionAssertRedirectPaymentResponse'
    AliasInsert:
      description: ""
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AliasInsertResponse'
    AliasAssertInsert:
      description: ""
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AliasAssertInsertResponse'
    AliasInsertDirect:
      description: ""
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AliasInsertDirectResponse'
    AliasDelete:
      description: ""
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AliasDeleteResponse'
    BatchClose:
      description: ""
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BatchCloseResponse'
    OmniChannelInsertAlias:
      description: ""
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OmniChannelInsertAliasResponse'
    OmniChannelAcquireTransaction:
      description: ""
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OmniChannelAcquireTransactionResponse'
  requestBodies:
    PaymentPageInitialize:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PaymentPageInitializeRequest'
      required: true
    PaymentPageAssert:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PaymentPageAssertRequest'
      required: true
    TransactionInitialize:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TransactionInitializeRequest'
      required: true
    TransactionAuthorize:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TransactionAuthorizeRequest'
      required: true
    TransactionQueryPaymentMeans:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TransactionQueryPaymentMeansRequest'
      required: true
    TransactionAdjustAmount:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TransactionAdjustAmountRequest'
      required: true
    TransactionAuthorizeDirect:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TransactionAuthorizeDirectRequest'
      required: true
    TransactionAuthorizeReferenced:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TransactionAuthorizeReferencedRequest'
      required: true
    TransactionCapture:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TransactionCaptureRequest'
      required: true
    TransactionMultipartCapture:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TransactionMultipartCaptureRequest'
      required: true
    TransactionAssertCapture:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TransactionAssertCaptureRequest'
      required: true
    TransactionMultipartFinalize:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TransactionMultipartFinalizeRequest'
      required: true
    TransactionRefund:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TransactionRefundRequest'
      required: true
    TransactionAssertRefund:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TransactionAssertRefundRequest'
      required: true
    TransactionRefundDirect:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TransactionRefundDirectRequest'
      required: true
    TransactionCancel:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TransactionCancelRequest'
      required: true
    TransactionRedirectPayment:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TransactionRedirectPaymentRequest'
      required: true
    TransactionAssertRedirectPayment:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TransactionAssertRedirectPaymentRequest'
      required: true
    AliasInsert:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AliasInsertRequest'
      required: true
    AliasAssertInsert:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AliasAssertInsertRequest'
      required: true
    AliasInsertDirect:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AliasInsertDirectRequest'
      required: true
    AliasDelete:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AliasDeleteRequest'
      required: true
    BatchClose:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BatchCloseRequest'
      required: true
    OmniChannelInsertAlias:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OmniChannelInsertAliasRequest'
      required: true
    OmniChannelAcquireTransaction:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OmniChannelAcquireTransactionRequest'
      required: true
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
